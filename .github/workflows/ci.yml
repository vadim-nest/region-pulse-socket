name: ci

on:
  push:
    branches: [master, develop]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm ci
      - run: npm --workspace=server run test
      - run: npm --workspace=client run test
      - run: npm --workspace=server run build
      - run: npm --workspace=client run build

  deploy:
    needs: build-test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      REGION: eu-west-2
      IMAGE_NAME: ws-app
      REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      # ----- build & push server image -----
      - name: Login to ECR
        run: aws ecr get-login-password --region $REGION | \
          docker login --username AWS --password-stdin $REGISTRY

      - name: Build & push server image
        run: |
          docker build -f docker/Dockerfile.server -t $IMAGE_NAME .
          docker tag $IMAGE_NAME $REGISTRY/$IMAGE_NAME:latest
          docker push      $REGISTRY/$IMAGE_NAME:latest

      - name: Trigger App Runner deployment
        run: aws apprunner start-deployment --service-arn ${{ secrets.APP_RUNNER_ARN }}

      # ----- build & upload client -----
      - run: npm --workspace=client run build
      - name: Sync to S3
        run: aws s3 sync client/dist s3://${{ secrets.S3_BUCKET }}/ --delete
      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_ID }} \
          --paths '/*'
